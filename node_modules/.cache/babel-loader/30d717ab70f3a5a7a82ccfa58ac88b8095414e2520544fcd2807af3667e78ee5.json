{"ast":null,"code":"var _jsxFileName = \"/Users/mj.paler/web-hooks-demo/src/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef, useCallback } from 'react';\nimport { TaskContext } from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const {\n    tasks,\n    dispatch\n  } = useContext(TaskContext);\n  const inputRef = useRef(null);\n  const addTask = useCallback(() => {\n    if (newTask.trim()) {\n      dispatch({\n        type: 'addTask',\n        text: newTask\n      });\n      setNewTask('');\n      inputRef.current.focus();\n    }\n  }, [newTask, dispatch]);\n  const toggleComplete = useCallback(id => {\n    dispatch({\n      type: 'completeTask',\n      id\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleComplete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: task.completed ? 'line-through' : 'none'\n          },\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch({\n            type: 'deleteTask',\n            id: task.id\n          }),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"oiC3xTtqn7902UPnJ9D4c7NYIMw=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useContext","useRef","useCallback","TaskContext","jsxDEV","_jsxDEV","TaskManager","_s","newTask","setNewTask","tasks","dispatch","inputRef","addTask","trim","type","text","current","focus","toggleComplete","id","children","ref","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","checked","completed","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/mj.paler/web-hooks-demo/src/TaskManager.js"],"sourcesContent":["\nimport React, { useState, useContext, useRef, useCallback } from 'react';\nimport { TaskContext } from './TaskContext';\n\nconst TaskManager = () => {\n    const [newTask, setNewTask] = useState('');\n    const { tasks, dispatch } = useContext(TaskContext);\n    const inputRef = useRef(null);\n\n    const addTask = useCallback(() => {\n        if (newTask.trim()) {\n            dispatch({ type: 'addTask', text: newTask });\n            setNewTask('');\n            inputRef.current.focus();\n        }\n    }, [newTask, dispatch]);\n\n    const toggleComplete = useCallback((id) => {\n        dispatch({ type: 'completeTask', id });\n    }, [dispatch]);\n\n    return (\n        <div>\n            <input\n                ref={inputRef}\n                type=\"text\"\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n                placeholder=\"Add a new task\"\n            />\n            <button onClick={addTask}>Add Task</button>\n            <ul>\n                {tasks.map((task) => (\n                    <li key={task.id}>\n                        <input\n                            type=\"checkbox\"\n                            checked={task.completed}\n                            onChange={() => toggleComplete(task.id)}\n                        />\n                        <span style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\n                            {task.text}\n                        </span>\n                        <button onClick={() => dispatch({ type: 'deleteTask', id: task.id })}>\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}