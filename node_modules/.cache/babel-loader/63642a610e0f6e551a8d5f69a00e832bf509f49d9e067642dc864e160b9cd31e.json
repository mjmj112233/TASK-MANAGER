{"ast":null,"code":"var _jsxFileName = \"/Users/mj.paler/web-hooks-demo/src/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef, useCallback } from 'react';\nimport { TaskContext } from './TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const {\n    tasks,\n    dispatch\n  } = useContext(TaskContext);\n  const inputRef = useRef(null);\n  const addTask = useCallback(() => {\n    if (newTask.trim()) {\n      dispatch({\n        type: 'ADD_TASK',\n        text: newTask\n      });\n      setNewTask('');\n      inputRef.current.focus();\n    }\n  }, [newTask, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch({\n            type: 'DELETE_TASK',\n            id: task.id\n          }),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"nJF0SuIICtdPYhDqdjIyUIUGixE=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useContext","useRef","useCallback","TaskContext","jsxDEV","_jsxDEV","TaskManager","_s","newTask","setNewTask","tasks","dispatch","inputRef","addTask","trim","type","text","current","focus","children","ref","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","id","_c","$RefreshReg$"],"sources":["/Users/mj.paler/web-hooks-demo/src/TaskManager.js"],"sourcesContent":["import React, { useState, useContext, useRef, useCallback } from 'react';\nimport { TaskContext } from './TaskContext';\n\nconst TaskManager = () => {\n    const [newTask, setNewTask] = useState('');\n    const { tasks, dispatch } = useContext(TaskContext);\n    const inputRef = useRef(null);\n\n    const addTask = useCallback(() => {\n        if (newTask.trim()) {\n            dispatch({ type: 'ADD_TASK', text: newTask });\n            setNewTask('');\n            inputRef.current.focus();\n        }\n    }, [newTask, dispatch]);\n\n    return (\n        <div>\n            <input\n                ref={inputRef}\n                type=\"text\"\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n                placeholder=\"Add a new task\"\n            />\n            <button onClick={addTask}>Add Task</button>\n            <ul>\n                {tasks.map((task) => (\n                    <li key={task.id}>\n                        <span>{task.text}</span>\n                        <button onClick={() => dispatch({ type: 'DELETE_TASK', id: task.id })}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACxE,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEW,KAAK;IAAEC;EAAS,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EACnD,MAAMS,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMY,OAAO,GAAGX,WAAW,CAAC,MAAM;IAC9B,IAAIM,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;MAChBH,QAAQ,CAAC;QAAEI,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAER;MAAQ,CAAC,CAAC;MAC7CC,UAAU,CAAC,EAAE,CAAC;MACdG,QAAQ,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACV,OAAO,EAAEG,QAAQ,CAAC,CAAC;EAEvB,oBACIN,OAAA;IAAAc,QAAA,gBACId,OAAA;MACIe,GAAG,EAAER,QAAS;MACdG,IAAI,EAAC,MAAM;MACXM,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAEjB,OAAQ;MAAAM,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CxB,OAAA;MAAAc,QAAA,EACKT,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACZ3B,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAOa,IAAI,CAAChB;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBxB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAAC;YAAEI,IAAI,EAAE,aAAa;YAAEkB,EAAE,EAAED,IAAI,CAACC;UAAG,CAAC,CAAE;UAAAd,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFjFG,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CAjCID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}